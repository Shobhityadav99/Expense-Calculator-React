{"version":3,"sources":["Components/UI/Card.js","Components/Expenses/ExpensesFilter.js","Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filtered","filter","exp","toString","selectedYear","ExpenseForm","enteredTitle","setenteredTitle","enteredAmount","setenteredAmount","enteredDate","setenteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","Button","variant","onClick","onCancel","NewExpense","isEditing","setIsEditing","size","enteredExpensedata","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d452794.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = event =>{\r\n    props.onChangeFilter(event.target.value);\r\n  }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nconst ExpenseItem = (props) => {\r\n    return <li>\r\n    <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}/>\r\n        <div className=\"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n    </Card>\r\n    </li>\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\nconst ExpensesList = props => {\r\n\r\n    if(props.items.length === 0){\r\n        return <h2 className=\"expense-list__fallback\">Found no expenses.</h2>\r\n    }\r\n    return <ul className=\"expenses-list\">\r\n        {props.items.map(expense =>\r\n            <ExpenseItem\r\n                id={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n            />)}\r\n    </ul>\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport './Expenses.css';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear);\r\n    }\r\n    const filtered = props.expenses.filter(exp => exp.date.getFullYear().toString() === filteredYear);\r\n\r\n    \r\n    return <Card className=\"expenses\">\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n        <ExpensesChart expenses={filtered}/>\r\n        <ExpensesList items={filtered}/>\r\n    </Card>\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport './ExpenseForm.css';\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setenteredTitle] = useState('');\r\n    const [enteredAmount, setenteredAmount] = useState('');\r\n    const [enteredDate, setenteredDate] = useState('');\r\n    const titleChangeHandler = (event) => {\r\n        setenteredTitle(event.target.value);\r\n    }\r\n    const amountChangeHandler = (event) => {\r\n        setenteredAmount(event.target.value);\r\n    }\r\n    const dateChangeHandler = (event) => {\r\n        setenteredDate(event.target.value);\r\n    }\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n        props.onSaveExpenseData(expenseData);\r\n        setenteredAmount('');\r\n        setenteredDate('');\r\n        setenteredTitle('');\r\n    }\r\n    return <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type=\"text\" onChange={titleChangeHandler} value={enteredTitle} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amout</label>\r\n                <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n            </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <Button variant=\"outline-primary\" type=\"button\" onClick={props.onCancel}>Cancel</Button>{' '}\r\n            <Button variant=\"primary\" type=\"submit\">Add Expenses</Button>{' '}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport {Button} from 'react-bootstrap';\r\nimport './NewExpense.css';\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const saveExpenseDataHandler = (enteredExpensedata) => {\r\n        const expenseData = {\r\n            ...enteredExpensedata,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    }\r\n    const starteditingHandler = () => {\r\n        setIsEditing(true);\r\n    }\r\n    const stopitingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n    return <div className=\"new-expense\">\r\n        <div className=\"mb-2\">\r\n            {!isEditing && <Button variant=\"primary\" size=\"lg\" onClick={starteditingHandler}>\r\n            Add New Expense\r\n            </Button>}\r\n        </div>\r\n        {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopitingHandler} />}\r\n    </div>\r\n}\r\n\r\nexport default NewExpense;","import React , { useState } from 'react';\nimport './App.css';\nimport Expenses from './Components/Expenses/Expenses';\nimport NewExpense from './Components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses,setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = expense => {\n    setExpenses((prevExpenses) => {\n      return [expense,...prevExpenses];\n    });\n  }\n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}